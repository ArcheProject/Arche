<tal:widget tal:define="
     name name|field.name;
     style field.widget.style;
     oid oid|field.oid;
     css_class css_class|field.widget.css_class;
     optgroup_class optgroup_class|field.widget.optgroup_class;
     multiple multiple|field.widget.multiple;">

   <style>
    .form-control .select2-selection--choice {
        border: 0;
        border-radius: 2px;
    }

    .form-control .select2-selection--choice .select2-arrow {
        border-radius: 0 2px 2px 0;   
    }

    .form-control.select2-selection {
        height: auto !important;
        padding: 0px;
    }

    .select2-container.select2-dropdown-open {
        border-color: #5897FB;
        border-radius: 3px 3px 0 0;
    }

    .select2-container.select2-dropdown-open .select2-results {
        border-radius: 3px 3px 0 0;
    }

    .form-control.select2-container .select2-selection--rendered {
        border: 0 !important;
        border-radius: 3px;
    }
   </style>

    <input type="hidden" name="__start__" value="${name}:sequence" tal:condition="multiple" />
    <select
      tal:attributes="
        name name;
        id oid;
        data-placeholder field.widget.placeholder|None;
        class string: form-control ${css_class};" multiple>

    <tal:loop tal:repeat="item values">
      <option tal:attributes="
              class css_class;
              value item.uid;" selected>${item.title}</option>
    </tal:loop>

    </select>

    <tal:comment condition="False">This is a structural item that will be used as a template</tal:comment>
    <div id="${field.oid}-struct" class="media" style="display: none;">
      <div class="pull-left img-container"></div>
      <div class="media-body">
        <h4 class="media-heading">
            <span class="heading-text"></span>
            (<span class="heading-type"></span>)
        </h4>
        <div class="description"></div>
      </div>
    </div>

  <script type="text/javascript">
   deform.addCallback('${field.oid}', function(oid) {
       var $selector = $('#' + oid).select2({
           placeholder: "${field.widget.placeholder}",
           containerCssClass: 'form-control',
           minimumInputLength: ${field.widget.minimumInputLength},
           multiple: ${str(bool(field.widget.multiple)).lower()},
           width: "100%",
           ajax: { // instead of writing the function to execute the request we use Select2's convenient helper
               url: "${query_url}",
               dataType: 'json',
               delay: 250,
               data: function (params) {
                    return {
                        query: params.term, // search term
                        page_limit: 10,
                    };
               },
               processResult: function (object, container, query) {
                   if (${show_thumbs} == true) {
                       var out = $('#${field.oid}-struct').clone();
                       out.removeAttr('id');
                       out.find('.img-container').html(object['img_tag']);
                       out.find('.heading-text').html( object['text'] );
                       out.find('.heading-type').html( object['type_title'] );
                       out.show();
                       container.html(out);
                   } else {
                       container.html( object['text'] + ' (' + object['type_title'] + ')');
                   }
               },
           },
       });
       var $sortable = $selector.data('select2').$container.find("ul.select2-selection__rendered");
       $sortable.sortable({
           items: ".select2-selection__choice",
           start: function(event, ui) {
               ui.item.data('old_position', $sortable.children().index(ui.item));
           },
           update: function(event, ui) {
               var $selected = $selector.children(':selected'),
                   old_pos = ui.item.data('old_position'),
                   pos = $sortable.children().index(ui.item),
                   $current = $selected.eq(old_pos),
                   $relativeTo = $selected.eq(pos)

               if (pos < old_pos) {
                   $current.insertBefore($relativeTo);
               } else {
                   $current.insertAfter($relativeTo);
               }
           },
       });
   });
  </script>

  <input type="hidden" name="__end__" value="${name}:sequence" tal:condition="multiple" />
</tal:widget>
