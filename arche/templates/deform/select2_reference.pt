<tal:widget tal:define="
     name name|field.name;
     style field.widget.style;
     oid oid|field.oid;
     css_class css_class|field.widget.css_class;
     optgroup_class optgroup_class|field.widget.optgroup_class;">

   <style>
    .form-control .select2-choice {
        border: 0;
        border-radius: 2px;
    }

    .form-control .select2-choice .select2-arrow {
        border-radius: 0 2px 2px 0;   
    }

    .form-control.select2-container {
        height: auto !important;
        padding: 0px;
    }

    .form-control.select2-container.select2-dropdown-open {
        border-color: #5897FB;
        border-radius: 3px 3px 0 0;
    }

    .form-control .select2-container.select2-dropdown-open .select2-choices {
        border-radius: 3px 3px 0 0;
    }

    .form-control.select2-container .select2-choices {
        border: 0 !important;
        border-radius: 3px;
    }
   </style>

    <input type="hidden"
      multiple="true"
      tal:attributes="
        name name;
        id oid;
        class string: form-control ${css_class};">

    <tal:comment condition="False">This is a structural item that will be used as a template</tal:comment>
    <div id="${field.oid}-struct" class="media" style="display: none;">
      <div class="pull-left img-container"></div>
      <div class="media-body">
        <h4 class="media-heading">
            <span class="heading-text"></span>
            (<span class="heading-type"></span>)
        </h4>
        <div class="description"></div>
      </div>
    </div>

  <script type="text/javascript">
   deform.addCallback(
     '${field.oid}',
     function(oid) {
       $('#' + oid).select2({
           placeholder: "${field.widget.placeholder}",
           containerCssClass: 'form-control',
           minimumInputLength: ${field.widget.minimumInputLength},
           multiple: true,
           formatResult: function (object, container, query) {
               if (${show_thumbs} == true) {
                   var out = $('#${field.oid}-struct').clone();
                   out.removeAttr('id');
                   out.find('.img-container').html(object['img_tag']);
                   out.find('.heading-text').html( object['text'] );
                   out.find('.heading-type').html( object['type_title'] );
                   out.show();
                   container.html(out);
               } else {
                   container.html( object['text'] + ' (' + object['type_title'] + ')');
               }
           },
           ajax: { // instead of writing the function to execute the request we use Select2's convenient helper
               url: "${query_url}",
               dataType: 'json',
               data: function (term, page) {
                    return {
                        query: term, // search term
                        page_limit: 10,
                    };
                },
                results: function (data, page) { return data }
           },
    });
    $('#' + oid).select2('data', ${preload_data} );
});
  </script>

</tal:widget>
