<tal:main xmlns="http://www.w3.org/1999/xhtml"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      i18n:domain="Arche">

<script type="text/javascript">
    Dropzone.autoDiscover = false;
	deform.addCallback(
    '${field.oid}',
    function(oid) {
    	var myDropzone = new Dropzone("div#${field.oid}", {
			url: "${field.request.resource_url(field.request.context, 'upload_temp')}",
			paramName: "upload",
			acceptedFiles: "${field.widget.acceptedFiles}",
			maxFilesize: ${field.widget.maxFilesize},
			dictDefaultMessage: 			"${field.widget.dropzoneDefaultMessage}",
			dictFallbackMessage: 			"${field.widget.dropzoneFallbackMessage}",
			dictFallbackText: 				"${field.widget.dropzoneFallbackText}",
			dictInvalidFileType:			"${field.widget.dropzoneInvalidFileType}",
			dictFileTooBig: 				"${field.widget.dropzoneFileTooBig}",
			dictResponseError: 				"${field.widget.dropzoneResponseError}",
			dictCancelUpload:	 			"${field.widget.dropzoneCancelUpload}",
			dictCancelUploadConfirmation: 	"${field.widget.dropzoneCancelUploadConfirmation}",
			dictRemoveFile: 				"${field.widget.dropzoneRemoveFile}",
			dictMaxFilesExceeded: 			"${field.widget.dropzoneMaxFilesExceeded}",
			addRemoveLinks: true,
			init: function() {
				this.on("addedfile", function(file) { console.log("Added file."+file); });
				this.on("success", function(file, response) {
					dropdiv = $("div#${field.oid}")[0];
					console.log(dropdiv);
					dropdiv.innerHTML += "<input type='hidden' name='${field.name}' value='" +response.uid+ "'>";
				});
			}
		});
	});
</script>

<div id="${field.oid}" class="dropzone"></div>

</tal:main>
